import{S as E}from"./rxjs-BbPesVBQ.js";class c{constructor(s){this._isDisposed=!1,this._disposeFn=s}dispose(){if(!this._isDisposed)return this._isDisposed=!0,this._disposeFn()}get isDisposed(){return this._isDisposed}static from(s){return new c(s)}}function x(...i){return{dispose(){for(const s of i)try{s.dispose()}catch(e){console.error("Error disposing resource:",e)}}}}function u(){const i=[];return{add(s){i.push(s)},dispose(){const s=[...i];i.length=0,x(...s).dispose()}}}class h extends E{constructor(){super(...arguments),this._isDisposed=!1}listen(s){const e=this.subscribe(s);return{dispose:()=>e.unsubscribe()}}fire(s){this._isDisposed||this.next(s)}dispose(){this._isDisposed||(this._isDisposed=!0,this.complete(),this.unsubscribe())}}class v{constructor(){this._commands=new Map}registerCommand(s,e){const t=typeof s=="string"?s:s.name;if(this._commands.has(t))throw new Error(`命令 "${t}" 已经注册`);return this._commands.set(t,e),c.from(()=>{this._commands.delete(t)})}async executeCommand(s,e){const t=typeof s=="string"?s:s.name,n=this._commands.get(t);if(!n)throw new Error(`命令 "${t}" 未注册`);try{return await Promise.resolve(n(e))}catch(r){throw console.error(`执行命令 "${t}" 出错:`,r),r}}hasCommand(s){return this._commands.has(s)}getCommands(){return Array.from(this._commands.keys())}dispose(){this._commands.clear()}}class y{constructor(){this._listeners=new Map}on(s,e){const t=typeof s=="string"?s:s.name;return this._listeners.has(t)||this._listeners.set(t,new Set),this._listeners.get(t).add(e),c.from(()=>{this._off(t,e)})}_off(s,e){const t=this._listeners.get(s);t&&(t.delete(e),t.size===0&&this._listeners.delete(s))}emit(s,e){const t=typeof s=="string"?s:s.name,n=this._listeners.get(t);if(n){const r=Array.from(n);for(const o of r)try{o(e)}catch(a){console.error(`事件处理器执行错误 (${t}):`,a)}}}once(s,e){const t=typeof s=="string"?s:s.name,n=(r=>{e(r),this._off(t,n)});return this.on(t,n)}hasListeners(s){const e=this._listeners.get(s);return!!e&&e.size>0}getEvents(){return Array.from(this._listeners.keys())}dispose(){this._listeners.clear()}}class f{constructor(s){this._storage=new Map,this._prefix=`ext.${s}.`}_getFullKey(s){const e=typeof s=="string"?s:s.name;return`${this._prefix}${e}`}async get(s,e){const t=this._getFullKey(s);return this._storage.has(t)?this._storage.get(t):e}async set(s,e){const t=this._getFullKey(s);this._storage.set(t,e)}async delete(s){const e=this._getFullKey(s);this._storage.delete(e)}async has(s){const e=this._getFullKey(s);return this._storage.has(e)}keys(){const s=[];for(const e of this._storage.keys())e.startsWith(this._prefix)&&s.push(e.substring(this._prefix.length));return s}async clear(){for(const s of this._storage.keys())s.startsWith(this._prefix)&&this._storage.delete(s)}dispose(){}}class m{constructor(s,e=0){this._prefix=s?`[${s}] `:"",this._level=e}setLevel(s){this._level=s}debug(s,...e){this._level<=0&&console.debug(`${this._prefix}${s}`,...e)}info(s,...e){this._level<=1&&console.info(`${this._prefix}${s}`,...e)}warn(s,...e){this._level<=2&&console.warn(`${this._prefix}${s}`,...e)}error(s,...e){this._level<=3&&console.error(`${this._prefix}${s}`,...e)}dispose(){}}function w(i,s=0){return new m(i,s)}function b(i,s){const e=u(),t=[],n=s.serviceRegistry,r=s.commandRegistry,o=s.eventBus,a=w(`扩展:${i.manifest.id}`),d=new f(`${i.manifest.id}.workspace`),l=new f(`${i.manifest.id}.global`),g={subscriptions:t,serviceRegistry:n,commandRegistry:r,eventBus:o,logger:a,storage:{workspace:d,global:l},dispose(){for(;t.length>0;){const _=t.pop();if(_)try{_.dispose()}catch(p){a.error("Error disposing subscription",p)}}e.dispose()},internalEvents:s.internalEvents};return e.add(a),e.add(d),e.add(l),g}class ${constructor(){this._services=new Map}registerService(s,e){const t=typeof s=="string"?s:s.name;if(this._services.has(t))throw new Error(`服务 "${t}" 已经注册`);return this._services.set(t,e),c.from(()=>{this._services.delete(t)})}getService(s){const e=typeof s=="string"?s:s.name;return this._services.get(e)}hasService(s){return this._services.has(s)}getServices(){return Array.from(this._services.keys())}dispose(){this._services.clear()}}class R{constructor(){this._extensions=new Map,this._activatedExtensions=new Map,this._disposables=u(),this._serviceRegistry=new $,this._commandRegistry=new v,this._eventBus=new y,this._internalEvents={onDidExtensionLoaded:new h,onDidExtensionActivated:new h,onDidExtensionDeactivated:new h,onExtensionError:new h},this._disposables.add(this._serviceRegistry),this._disposables.add(this._commandRegistry),this._disposables.add(this._eventBus),this._disposables.add(this._internalEvents.onDidExtensionLoaded),this._disposables.add(this._internalEvents.onDidExtensionActivated),this._disposables.add(this._internalEvents.onDidExtensionDeactivated),this._disposables.add(this._internalEvents.onExtensionError)}get serviceRegistry(){return this._serviceRegistry}get commandRegistry(){return this._commandRegistry}get eventBus(){return this._eventBus}get internalEvents(){return this._internalEvents}registerExtension(s){const e=s.manifest.id;if(this._extensions.has(e))throw new Error(`扩展 "${e}" 已经注册`);return this._extensions.set(e,s),this._internalEvents.onDidExtensionLoaded.fire(s),e}async loadExtension(s){try{const e=await import(s);if(!e.default)throw new Error(`扩展模块 ${s} 没有默认导出`);const t=e.default;return this.registerExtension(t)}catch(e){throw new Error(`加载扩展 ${s} 失败: ${e instanceof Error?e.message:String(e)}`)}}async loadExtensions(s){return console.log(`将从目录加载扩展: ${s}`),[]}getExtensionManifest(s){return this._extensions.get(s)?.manifest}getExtensionNames(){return Array.from(this._extensions.keys())}activateExtension(s){if(this._activatedExtensions.has(s))return;const e=this._extensions.get(s);if(!e)throw new Error(`找不到扩展 "${s}"`);try{const t=b(e,this);e.activate(t),this._activatedExtensions.set(s,{extension:e,context:t}),this._internalEvents.onDidExtensionActivated.fire(e);return}catch(t){const n=t instanceof Error?t:new Error(String(t));throw this._internalEvents.onExtensionError.fire({extension:e,error:n}),n}}deactivateExtension(s){const e=this._activatedExtensions.get(s);if(!e)return;const{extension:t,context:n}=e;try{t.deactivate&&t.deactivate(),n.dispose(),this._activatedExtensions.delete(s),this._internalEvents.onDidExtensionDeactivated.fire(t)}catch(r){const o=r instanceof Error?r:new Error(String(r));throw this._internalEvents.onExtensionError.fire({extension:t,error:o}),o}}getExtensions(){return Array.from(this._extensions.values())}getActivatedExtensions(){return Array.from(this._activatedExtensions.values())}getExtension(s){return this._extensions.get(s)}isExtensionActive(s){return this._activatedExtensions.has(s)}activateAllExtensions(){for(const s of this._extensions.keys())this._activatedExtensions.has(s)||this.activateExtension(s)}dispose(){for(const s of this._activatedExtensions.keys())this.deactivateExtension(s);this._extensions.clear(),this._activatedExtensions.clear(),this._disposables.dispose()}}const A=i=>i;export{c as D,R as E,A as d};
